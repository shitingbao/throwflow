syntax = "proto3";

package admin.v1;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "validate/validate.proto";

option go_package = "admin/api/admin/v1;v1";

service Admin {
  // 登录
  rpc Login (LoginRequest) returns (LoginReply) {
    option (google.api.http) = {
      post: "/v1/admin/login",
      body: "*",
    };
  }
  // 退出
  rpc Logout (google.protobuf.Empty) returns (LogoutReply) {
    option (google.api.http) = {
      post: "/v1/admin/logout",
      body: "*",
    };
  }
  // 获取后台管理员菜单
  rpc ListUserMenus (google.protobuf.Empty) returns (ListUserMenusReply) {
    option (google.api.http) = {
      get: "/v1/admin/users/menus"
    };
  }
  // 获取登录管理员信息
  rpc GetUserInfo (google.protobuf.Empty) returns (GetUserInfoReply) {
    option (google.api.http) = {
      get: "/v1/admin/users/info"
    };
  }

  // token管理
  rpc GetToken (google.protobuf.Empty) returns (GetTokenReply) {
    option (google.api.http) = {
      get: "/v1/admin/tokens"
    };
  }

  // 菜单管理[列表]
  rpc ListMenus (google.protobuf.Empty) returns (ListMenusReply) {
    option (google.api.http) = {
      get: "/v1/admin/menus"
    };
  }
  // 获取权限标识
  rpc ListPermissionCodes (google.protobuf.Empty) returns (ListPermissionCodesReply) {
    option (google.api.http) = {
      get: "/v1/admin/permissionCodes"
    };
  }
  // 菜单管理[新增]
  rpc CreateMenus (CreateMenusRequest) returns (CreateMenusReply) {
    option (google.api.http) = {
      post: "/v1/admin/menus",
      body: "*",
    };
  }
  // 菜单管理[修改]
  rpc UpdateMenus (UpdateMenusRequest) returns (UpdateMenusReply) {
    option (google.api.http) = {
      put: "/v1/admin/menus/{id}",
      body: "*",
    };
  }
  // 菜单管理[修改状态]
  rpc UpdateStatusMenus (UpdateStatusMenusRequest) returns (UpdateStatusMenusReply) {
    option (google.api.http) = {
      put: "/v1/admin/menus/{id}/status",
      body: "*",
    };
  }
  // 菜单管理[删除]
  rpc DeleteMenus (DeleteMenusRequest) returns (DeleteMenusReply) {
    option (google.api.http) = {
      delete: "/v1/admin/menus/{id}",
    };
  }

  // 盟码菜单管理[列表]
  rpc ListCompanyMenus (google.protobuf.Empty) returns (ListCompanyMenusReply) {
    option (google.api.http) = {
      get: "/v1/admin/companymenus"
    };
  }
  // 获取盟码菜单权限标识
  rpc ListCompanyPermissionCodes (google.protobuf.Empty) returns (ListCompanyPermissionCodesReply) {
    option (google.api.http) = {
      get: "/v1/admin/companymenus/permissionCodes"
    };
  }

  // 盟码菜单管理[新增]
  rpc CreateCompanyMenus (CreateCompanyMenusRequest) returns (CreateCompanyMenusReply) {
    option (google.api.http) = {
      post: "/v1/admin/companymenus",
      body: "*",
    };
  }
  // 盟码菜单管理[修改]
  rpc UpdateCompanyMenus (UpdateCompanyMenusRequest) returns (UpdateCompanyMenusReply) {
    option (google.api.http) = {
      put: "/v1/admin/companymenus/{id}",
      body: "*",
    };
  }
  // 盟码菜单管理[修改状态]
  rpc UpdateStatusCompanyMenus (UpdateStatusCompanyMenusRequest) returns (UpdateStatusCompanyMenusReply) {
    option (google.api.http) = {
      put: "/v1/admin/companymenus/{id}/status",
      body: "*",
    };
  }
  // 盟码菜单管理[删除]
  rpc DeleteCompanyMenus (DeleteCompanyMenusRequest) returns (DeleteCompanyMenusReply) {
    option (google.api.http) = {
      delete: "/v1/admin/companymenus/{id}",
    };
  }

  // 角色管理[列表]
  rpc ListRoles (google.protobuf.Empty) returns (ListRolesReply) {
    option (google.api.http) = {
      get: "/v1/admin/roles"
    };
  }
  // 角色管理[创建]
  rpc CreateRoles (CreateRolesRequest) returns (CreateRolesReply) {
    option (google.api.http) = {
      post: "/v1/admin/roles",
      body: "*",
    };
  }
  // 角色管理[修改]
  rpc UpdateRoles (UpdateRolesRequest) returns (UpdateRolesReply) {
    option (google.api.http) = {
      put: "/v1/admin/roles/{id}",
      body: "*",
    };
  }
  // 角色管理[修改状态]
  rpc UpdateStatusRoles (UpdateStatusRolesRequest) returns (UpdateStatusRolesReply) {
    option (google.api.http) = {
      put: "/v1/admin/roles/{id}/status",
      body: "*",
    };
  }
  // 角色管理[删除]
  rpc DeleteRoles (DeleteRolesRequest) returns (DeleteRolesReply) {
    option (google.api.http) = {
      delete: "/v1/admin/roles/{id}",
    };
  }

  // 后台管理员管理[列表]
  rpc ListUsers (ListUsersRequest) returns (ListUsersReply) {
    option (google.api.http) = {
      get: "/v1/admin/users"
    };
  }
  // 后台管理员管理[新增]
  rpc CreateUsers (CreateUsersRequest) returns (CreateUsersReply) {
    option (google.api.http) = {
      post: "/v1/admin/users",
      body: "*",
    };
  }
  // 后台管理员管理[修改]
  rpc UpdateUsers (UpdateUsersRequest) returns (UpdateUsersReply) {
    option (google.api.http) = {
      put: "/v1/admin/users/{id}",
      body: "*",
    };
  }
  // 后台管理员管理[修改状态]
  rpc UpdateStatusUsers (UpdateStatusUsersRequest) returns (UpdateStatusUsersReply) {
    option (google.api.http) = {
      put: "/v1/admin/users/{id}/status",
      body: "*",
    };
  }
  // 后台管理员管理[删除]
  rpc DeleteUsers (DeleteUsersRequest) returns (DeleteUsersReply) {
    option (google.api.http) = {
      delete: "/v1/admin/users/{id}",
    };
  }

  // 短信记录管理[列表]
  rpc ListSmsLogs (ListSmsLogsRequest) returns (ListSmsLogsReply) {
    option (google.api.http) = {
      get: "/v1/admin/smslogs"
    };
  }

  // 巨量引擎应用账号管理[列表]
  rpc ListOceanengineConfigs (ListOceanengineConfigsRequest) returns (ListOceanengineConfigsReply) {
    option (google.api.http) = {
      get: "/v1/admin/oceanengineConfigs"
    };
  }
  // 巨量引擎应用账号管理[select值]
  rpc ListSelectOceanengineConfigs (google.protobuf.Empty) returns (ListSelectOceanengineConfigsReply) {
    option (google.api.http) = {
      get: "/v1/admin/oceanengineConfigs/selects"
    };
  }
  // 巨量引擎应用账号管理[新增]
  rpc CreateOceanengineConfigs (CreateOceanengineConfigsRequest) returns (CreateOceanengineConfigsReply) {
    option (google.api.http) = {
      post: "/v1/admin/oceanengineConfigs",
      body: "*",
    };
  }
  // 巨量引擎应用账号管理[修改]
  rpc UpdateOceanengineConfigs (UpdateOceanengineConfigsRequest) returns (UpdateOceanengineConfigsReply) {
    option (google.api.http) = {
      put: "/v1/admin/oceanengineConfigs/{id}",
      body: "*",
    };
  }
  // 巨量引擎应用账号管理[修改状态]
  rpc UpdateStatusOceanengineConfigs (UpdateStatusOceanengineConfigsRequest) returns (UpdateStatusOceanengineConfigsReply) {
    option (google.api.http) = {
      put: "/v1/admin/oceanengineConfigs/{id}/status",
      body: "*",
    };
  }
  // 巨量引擎应用账号管理[删除]
  rpc DeleteOceanengineConfigs (DeleteOceanengineConfigsRequest) returns (DeleteOceanengineConfigsReply) {
    option (google.api.http) = {
      delete: "/v1/admin/oceanengineConfigs/{id}",
    };
  }

  // 线索库管理[列表]
  rpc ListClues (ListCluesRequest) returns (ListCluesReply) {
    option (google.api.http) = {
      get: "/v1/admin/clues"
    };
  }
  // 线索库管理[select值]
  rpc ListSelectClues (google.protobuf.Empty) returns (ListSelectCluesReply) {
    option (google.api.http) = {
      get: "/v1/admin/clues/selects"
    };
  }
  // 线索库管理[统计]
  rpc StatisticsClues (google.protobuf.Empty) returns (StatisticsCluesReply) {
    option (google.api.http) = {
      get: "/v1/admin/clues/statistics"
    };
  }
  // 线索库管理[新增]
  rpc CreateClues (CreateCluesRequest) returns (CreateCluesReply) {
    option (google.api.http) = {
      post: "/v1/admin/clues",
      body: "*",
    };
  }
  // 线索库管理[修改]
  rpc UpdateClues (UpdateCluesRequest) returns (UpdateCluesReply) {
    option (google.api.http) = {
      put: "/v1/admin/clues/{id}",
      body: "*",
    };
  }
  // 线索库管理[修改操作记录]
  rpc UpdateOperationLogClues (UpdateOperationLogCluesRequest) returns (UpdateOperationLogCluesReply) {
    option (google.api.http) = {
      put: "/v1/admin/clues/{id}/operationLog",
      body: "*",
    };
  }
  // 线索库管理[删除]
  rpc DeleteClues (DeleteCluesRequest) returns (DeleteCluesReply) {
    option (google.api.http) = {
      delete: "/v1/admin/clues/{id}",
    };
  }

  // 企业库管理[列表]
  rpc ListCompanys (ListCompanysRequest) returns (ListCompanysReply) {
    option (google.api.http) = {
      get: "/v1/admin/companys"
    };
  }
  // 企业库管理[select值]
  rpc ListSelectCompanys (google.protobuf.Empty) returns (ListSelectCompanysReply) {
    option (google.api.http) = {
      get: "/v1/admin/companys/selects"
    };
  }
  // 企业库管理[统计]
  rpc StatisticsCompanys (google.protobuf.Empty) returns (StatisticsCompanysReply) {
    option (google.api.http) = {
      get: "/v1/admin/companys/statistics"
    };
  }
  // 企业库管理[新增]
  rpc CreateCompanys (CreateCompanysRequest) returns (CreateCompanysReply) {
    option (google.api.http) = {
      post: "/v1/admin/companys",
      body: "*",
    };
  }
  // 企业库管理[修改]
  rpc UpdateCompanys (UpdateCompanysRequest) returns (UpdateCompanysReply) {
    option (google.api.http) = {
      put: "/v1/admin/companys/{id}",
      body: "*",
    };
  }
  // 企业库管理[修改状态]
  rpc UpdateStatusCompanys (UpdateStatusCompanysRequest) returns (UpdateStatusCompanysReply) {
    option (google.api.http) = {
      put: "/v1/admin/companys/{id}/status",
      body: "*",
    };
  }
  // 企业库管理[权限]
  rpc UpdateRoleCompanys (UpdateRoleCompanysRequest) returns (UpdateRoleCompanysReply) {
    option (google.api.http) = {
      put: "/v1/admin/companys/{id}/role",
      body: "*",
    };
  }
  rpc DeleteCompanys (DeleteCompanysRequest) returns (DeleteCompanysReply) {
    option (google.api.http) = {
      delete: "/v1/admin/companys/{id}",
    };
  }

  // 企业库用户管理[列表]
  rpc ListCompanyUsers (ListCompanyUsersRequest) returns (ListCompanyUsersReply) {
    option (google.api.http) = {
      get: "/v1/admin/company/{companyId}/users"
    };
  }
  // 企业库用户管理[select值]
  rpc ListSelectCompanyUsers (google.protobuf.Empty) returns (ListSelectCompanyUsersReply) {
    option (google.api.http) = {
      get: "/v1/admin/company/users/selects"
    };
  }
  // 企业库用户管理[新增]
  rpc CreateCompanyUsers (CreateCompanyUsersRequest) returns (CreateCompanyUsersReply) {
    option (google.api.http) = {
      post: "/v1/admin/company/{companyId}/users",
      body: "*",
    };
  }
  // 企业库用户管理[修改]
  rpc UpdateCompanyUsers (UpdateCompanyUsersRequest) returns (UpdateCompanyUsersReply) {
    option (google.api.http) = {
      put: "/v1/admin/company/{companyId}/users/{id}",
      body: "*",
    };
  }
  // 企业库用户管理[修改状态]
  rpc UpdateStatusCompanyUsers (UpdateStatusCompanyUsersRequest) returns (UpdateStatusCompanyUsersReply) {
    option (google.api.http) = {
      put: "/v1/admin/company/{companyId}/users/{id}/status",
      body: "*",
    };
  }
  // 企业库用户管理[权限]
  rpc ListQianchuanAdvertisersCompanyUsers (ListQianchuanAdvertisersCompanyUsersRequest) returns (ListQianchuanAdvertisersCompanyUsersReply) {
    option (google.api.http) = {
      get: "/v1/admin/company/{companyId}/users/{id}/qianchuanAdvertisers"
    };
  }
  // 企业库用户管理[权限]
  rpc UpdateRoleCompanyUsers (UpdateRoleCompanyUsersRequest) returns (UpdateRoleCompanyUsersReply) {
    option (google.api.http) = {
      put: "/v1/admin/company/{companyId}/users/{id}/role",
      body: "*",
    };
  }
  // 企业库用户管理[白名单]
  rpc UpdateWhiteCompanyUsers (UpdateWhiteCompanyUsersRequest) returns (UpdateWhiteCompanyUsersReply) {
    option (google.api.http) = {
      put: "/v1/admin/company/{companyId}/users/{id}/white",
      body: "*",
    };
  }
  // 企业库用户管理[删除]
  rpc DeleteCompanyUsers (DeleteCompanyUsersRequest) returns (DeleteCompanyUsersReply) {
    option (google.api.http) = {
      delete: "/v1/admin/company/{companyId}/users/{id}",
    };
  }

  // 行业
  rpc ListIndustries (google.protobuf.Empty) returns (ListIndustriesReply) {
    option (google.api.http) = {
      get: "/v1/admin/industries"
    };
  }

  // 行政区划
  rpc ListAreas (ListAreasRequest) returns (ListAreasReply) {
    option (google.api.http) = {
      get: "/v1/admin/areas/{parentAreaCode}"
    };
  }

  // 更新日志管理[列表]
  rpc ListUpdateLogs (google.protobuf.Empty) returns (ListUpdateLogsReply) {
    option (google.api.http) = {
      get: "/v1/admin/updateLogs"
    };
  }
  // 更新日志管理[新增]
  rpc CreateUpdateLogs (CreateUpdateLogsRequest) returns (CreateUpdateLogsReply) {
    option (google.api.http) = {
      post: "/v1/admin/updateLogs",
      body: "*",
    };
  }
  // 更新日志管理[修改]
  rpc UpdateUpdateLogs (UpdateUpdateLogsRequest) returns (UpdateUpdateLogsReply) {
    option (google.api.http) = {
      put: "/v1/admin/updateLogs/{id}",
      body: "*",
    };
  }
}

message LoginRequest {
  string username = 1 [(validate.rules).string.pattern = "(?i)^[a-zA-Z\\d]{8,12}$"];
  string password = 2;
}

message LoginReply {
  message PermissionCodes {
    string permissionCode = 1;
  }

  message Data {
    string username = 1;
    string nickname = 2;
    string email = 3;
    string lastLoginTime = 4;
    string token = 5;
    string roleName = 6;
    repeated PermissionCodes permissionCodes = 7;
  }
  uint32 code = 1;
  Data data = 2;
}

message LogoutReply {
  message Data {
  }
  uint32 code = 1;
  Data data = 2;
}

message ListUserMenusReply {
  message Data {
    string list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message GetUserInfoReply {
  message PermissionCodes {
    string permissionCode = 1;
  }

  message Data {
    string username = 1;
    string nickname = 2;
    string email = 3;
    string lastLoginTime = 4;
    string roleName = 5;
    repeated PermissionCodes permissionCodes = 6;
  }
  uint32 code = 1;
  Data data = 2;
}

message GetTokenReply {
  message Data {
    string token = 1;
  }
  uint32 code = 1;
  Data data = 2;
}

message ListMenusReply {
  message Data {
    string list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListPermissionCodesReply {
  message ChildPermissionCodes {
    string name = 1;
    string code = 2;
  }

  message PermissionCodes {
    string name = 1;
    string code = 2;
    repeated ChildPermissionCodes childList = 3;
  }

  message Data {
    repeated PermissionCodes list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateMenusRequest {
  string menuName = 1 [(validate.rules).string ={min_len: 1, max_len: 50}];
  uint64 parentId = 2 [(validate.rules).uint64.gte = 0];
  uint32 menuType = 3 [(validate.rules).uint32 = {in: [1, 2, 3]}];
  uint32 sort = 4 [(validate.rules).uint32.gte = 0];
  string fileName = 5 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string iconName = 6 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string permissionCode = 7;
  uint32 status = 8 [(validate.rules).uint32 = {in: [0, 1]}];
  string token = 9 [(validate.rules).string ={len: 32}];
}

message CreateMenusReply {
  message Data {
    uint64 id = 1;
    string menuName = 2;
    uint64 parentId = 3;
    uint32 menuType = 4;
    uint32 sort = 5;
    string fileName = 6;
    string iconName = 7;
    string permissionCode = 8;
    uint32 status = 9;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateMenusRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string menuName = 2 [(validate.rules).string ={min_len: 1, max_len: 50}];
  uint32 sort = 3 [(validate.rules).uint32.gte = 0];
  string fileName = 4 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string iconName = 5 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string permissionCode = 6;
}

message UpdateMenusReply {
  message Data {
    uint64 id = 1;
    string menuName = 2;
    uint64 parentId = 3;
    uint32 menuType = 4;
    uint32 sort = 5;
    string fileName = 6;
    string iconName = 7;
    string permissionCode = 8;
    uint32 status = 9;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusMenusRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 status = 2 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusMenusReply {
  message Data {
    uint64 id = 1;
    string menuName = 2;
    uint64 parentId = 3;
    uint32 menuType = 4;
    uint32 sort = 5;
    string fileName = 6;
    string iconName = 7;
    string permissionCode = 8;
    uint32 status = 9;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteMenusRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteMenusReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListCompanyMenusReply {
    message ChildMenus {
      uint64 id = 1;
      string menuName = 2;
      uint64 parentId = 3;
      uint32 sort = 4;
      string menuType = 5;
      string filename = 6;
      string filepath = 7;
      string permissionCode = 8;
      uint32 status = 9;
    }
    message Menus{
      uint64 id = 1;
      string menuName = 2;
      repeated ChildMenus childList = 3;
      uint64 parentId = 4;
      uint32 sort = 5;
      string menuType = 6;
      string filename = 7;
      string filepath = 8;
      string permissionCode = 9;
      uint32 status = 10;
    }

    message Data {
      repeated Menus list = 1;
    }

    uint32 code = 1;
    Data data = 2;
}

message ListCompanyPermissionCodesReply {
  message PermissionCodes {
    string name = 1;
    string code = 2;
  }

  message Data {
    repeated PermissionCodes list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateCompanyMenusRequest {
  string menuName = 1 [(validate.rules).string ={min_len: 1, max_len: 20}];
  uint64 parentId = 2 [(validate.rules).uint64.gte = 0];
  uint32 sort = 3 [(validate.rules).uint32.gte = 0];
  string menuType = 4 [(validate.rules).string = {in: ["menu", "button"]}];
  string filename = 5 [(validate.rules).string ={min_len: 1, max_len: 50}];
  string filepath = 6 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string permissionCode = 7;
  uint32 status = 8 [(validate.rules).uint32 = {in: [0, 1]}];
  string token = 9 [(validate.rules).string ={len: 32}];
}

message CreateCompanyMenusReply {
  message Data {
    uint64 id = 1;
    string menuName = 2;
    uint64 parentId = 3;
    uint32 sort = 4;
    string menuType = 5;
    string filename = 6;
    string filepath = 7;
    string permissionCode = 8;
    uint32 status = 9;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateCompanyMenusRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string menuName = 2 [(validate.rules).string ={min_len: 1, max_len: 20}];
  uint32 sort = 3 [(validate.rules).uint32.gte = 0];
  string menuType = 4 [(validate.rules).string = {in: ["menu", "button"]}];
  string filename = 5 [(validate.rules).string ={min_len: 1, max_len: 50}];
  string filepath = 6 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string permissionCode = 7;
}

message UpdateCompanyMenusReply {
  message Data {
    uint64 id = 1;
    string menuName = 2;
    uint64 parentId = 3;
    uint32 sort = 4;
    string menuType = 5;
    string filename = 6;
    string filepath = 7;
    string permissionCode = 8;
    uint32 status = 9;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusCompanyMenusRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 status = 2 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusCompanyMenusReply {
  message Data {
    uint64 id = 1;
    string menuName = 2;
    uint64 parentId = 3;
    uint32 sort = 4;
    string menuType = 5;
    string filename = 6;
    string filepath = 7;
    string permissionCode = 8;
    uint32 status = 9;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteCompanyMenusRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteCompanyMenusReply{
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListRolesReply {
  message Roles{
    uint64 id = 1;
    string roleName = 2;
    string roleExplain = 3;
    string menuIds = 4;
    uint32 status = 5;
  }

  message Data {
    repeated Roles list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateRolesRequest {
  string roleName = 1 [(validate.rules).string ={min_len: 1, max_len: 20}];
  string roleExplain = 2 [(validate.rules).string ={min_len: 0, max_len: 255}];
  string menuIds = 3 [(validate.rules).string ={min_len: 1, max_len: 255}];
  uint32 status = 4 [(validate.rules).uint32 = {in: [0, 1]}];
  string token = 5 [(validate.rules).string ={len: 32}];
}

message CreateRolesReply {
  message Data {
    uint64 id = 1;
    string roleName = 2;
    string roleExplain = 3;
    string menuIds = 4;
    uint32 status = 5;
  }
  uint32 code = 1;
  Data data = 2;
}

message UpdateRolesRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string roleName = 2 [(validate.rules).string ={min_len: 1, max_len: 20}];
  string roleExplain = 3 [(validate.rules).string ={min_len: 0, max_len: 255}];
  string menuIds = 4 [(validate.rules).string ={min_len: 1, max_len: 255}];
  uint32 status = 5 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateRolesReply {
  message Data {
    uint64 id = 1;
    string roleName = 2;
    string roleExplain = 3;
    string menuIds = 4;
    uint32 status = 5;
  }
  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusRolesRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 status = 2 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusRolesReply {
  message Data {
    uint64 id = 1;
    string roleName = 2;
    string roleExplain = 3;
    string menuIds = 4;
    uint32 status = 5;
  }
  uint32 code = 1;
  Data data = 2;
}

message DeleteRolesRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteRolesReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListUsersRequest {
  uint64 pageNum = 1 [(validate.rules).uint64.gt = 0];
}

message ListUsersReply {
  message Users{
    uint64 id = 1;
    string username = 2;
    string nickname = 3;
    string email = 4;
    uint64 roleId = 5;
    uint32 status = 6;
    string lastLoginIp = 7;
    string lastLoginTime = 8;
  }

  message Data {
    uint64 pageNum = 1;
    uint64 pageSize = 2;
    uint64 total = 3;
    uint64 totalPage = 4;
    repeated Users list = 5;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateUsersRequest {
  string username = 1 [(validate.rules).string.pattern = "(?i)^[a-zA-Z\\d]{8,12}$"];
  string nickname = 2 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string email = 3;
  string password = 4;
  uint64 roleId = 5 [(validate.rules).uint64.gte = 0];
  uint32 status = 6 [(validate.rules).uint32 = {in: [0, 1]}];
  string token = 7 [(validate.rules).string ={len: 32}];
}

message CreateUsersReply {
  message Data {
    uint64 id = 1;
    string username = 2;
    string nickname = 3;
    string email = 4;
    uint64 roleId = 5;
    uint32 status = 6;
    string lastLoginIp = 7;
    string lastLoginTime = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string username = 2 [(validate.rules).string.pattern = "(?i)^[a-zA-Z\\d]{8,12}$"];
  string nickname = 3 [(validate.rules).string ={min_len: 0, max_len: 50}];
  string email = 4;
  string password = 5;
  uint64 roleId = 6 [(validate.rules).uint64.gte = 0];
  uint32 status = 7 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateUsersReply {
  message Data {
    uint64 id = 1;
    string username = 2;
    string nickname = 3;
    string email = 4;
    uint64 roleId = 5;
    uint32 status = 6;
    string lastLoginIp = 7;
    string lastLoginTime = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 status = 2 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusUsersReply {
  message Data {
    uint64 id = 1;
    string username = 2;
    string nickname = 3;
    string email = 4;
    uint64 roleId = 5;
    uint32 status = 6;
    string lastLoginIp = 7;
    string lastLoginTime = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteUsersReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListSmsLogsRequest {
  uint64 pageNum = 1 [(validate.rules).uint64.gt = 0];
}

message ListSmsLogsReply {
  message SmsLogs{
    uint64 id = 1;
    string phone = 2;
    string content = 3;
    string reply = 4;
    string type = 5;
    string ip = 6;
    string createTime = 7;
    string updateTime = 8;
  }

  message Data {
    uint64 pageNum = 1;
    uint64 pageSize = 2;
    uint64 total = 3;
    uint64 totalPage = 4;
    repeated SmsLogs list = 5;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListOceanengineConfigsRequest {
  uint64 pageNum = 1 [(validate.rules).uint64.gt = 0];
  uint32 oceanengineType = 2 [(validate.rules).uint32 = {in: [0, 1, 2]}];
}

message ListOceanengineConfigsReply {
  message OceanengineConfigs{
    uint64 id = 1;
    uint32 oceanengineType = 2;
    string appId = 3;
    string appName = 4;
    string appSecret = 5;
    string redirectUrl = 6;
    uint32 concurrents = 7;
    uint32 status = 8;
    string createTime = 9;
    string updateTime = 10;
  }

  message Data {
    uint64 pageNum = 1;
    uint64 pageSize = 2;
    uint64 total = 3;
    uint64 totalPage = 4;
    repeated OceanengineConfigs list = 5;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListSelectOceanengineConfigsReply {
  message OceanengineType {
    string key = 1;
    string value = 2;
  }

  message Data{
    repeated OceanengineType oceanengineType = 2;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateOceanengineConfigsRequest {
  uint32 oceanengineType = 1 [(validate.rules).uint32 = {in: [1, 2]}];
  string appId = 2 [(validate.rules).string ={min_len: 1, max_len: 30}];
  string appName = 3 [(validate.rules).string ={min_len: 1, max_len: 200}];
  string appSecret = 4 [(validate.rules).string ={min_len: 1, max_len: 255}];
  string redirectUrl = 5 [(validate.rules).string.uri = true];
  uint32 concurrents = 6 [(validate.rules).uint32 = {gt:0, lte: 200}];
  uint32 status = 7 [(validate.rules).uint32 = {in: [0, 1]}];
  string token = 8 [(validate.rules).string ={len: 32}];
}

message CreateOceanengineConfigsReply {
  message Data {
    uint64 id = 1;
    uint32 oceanengineType = 2;
    string appId = 3;
    string appName = 4;
    string appSecret = 5;
    string redirectUrl = 6;
    uint32 concurrents = 7;
    uint32 status = 8;
    string createTime = 9;
    string updateTime = 10;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateOceanengineConfigsRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 oceanengineType = 2 [(validate.rules).uint32 = {in: [1, 2]}];
  string appId = 3 [(validate.rules).string ={min_len: 1, max_len: 30}];
  string appName = 4 [(validate.rules).string ={min_len: 1, max_len: 200}];
  string appSecret = 5 [(validate.rules).string ={min_len: 1, max_len: 255}];
  string redirectUrl = 6 [(validate.rules).string.uri = true];
  uint32 concurrents = 7 [(validate.rules).uint32 = {gt:0, lte: 200}];
  uint32 status = 8 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateOceanengineConfigsReply {
  message Data {
    uint64 id = 1;
    uint32 oceanengineType = 2;
    string appId = 3;
    string appName = 4;
    string appSecret = 5;
    string redirectUrl = 6;
    uint32 concurrents = 7;
    uint32 status = 8;
    string createTime = 9;
    string updateTime = 10;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusOceanengineConfigsRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 status = 2 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusOceanengineConfigsReply {
  message Data {
    uint64 id = 1;
    uint32 oceanengineType = 2;
    string appId = 3;
    string appName = 4;
    string appSecret = 5;
    string redirectUrl = 6;
    uint32 concurrents = 7;
    uint32 status = 8;
    string createTime = 9;
    string updateTime = 10;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteOceanengineConfigsRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteOceanengineConfigsReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListCluesRequest {
  uint64 pageNum = 1 [(validate.rules).uint64.gt = 0];
  string keyword = 2 [(validate.rules).string = {min_len: 0}];
  uint64 industryId = 3 [(validate.rules).uint64.gte = 0];
  uint32 status = 5 [(validate.rules).uint32 = {in: [0, 1, 2, 3, 4, 5]}];
}

message ListCluesReply {
  message OperationLog {
    string userName = 1;
    string content = 2;
    string createTime = 3;
  }

  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Clues{
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 companyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    string source = 11;
    string status = 12;
    repeated OperationLog operationLogs = 13;
    string address = 14;
    string areaName = 15;
    uint64 areaCode = 16;
    uint32 isAffiliates = 17;
    string adminName = 18;
    string adminPhone = 19;
  }

  message Data {
    uint64 pageNum = 1;
    uint64 pageSize = 2;
    uint64 total = 3;
    uint64 totalPage = 4;
    repeated Clues list = 5;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListSelectCluesReply {
  message Status {
    string key = 1;
    string value = 2;
  }

  message CompanyType {
    string key = 1;
    string value = 2;
  }

  message QianchuanUse {
    string key = 1;
    string value = 2;
  }

  message Data{
    repeated Status status = 1;
    repeated CompanyType companyType = 2;
    repeated QianchuanUse qianchuanUse = 3;
  }

  uint32 code = 1;
  Data data = 2;
}

message StatisticsCluesReply {
  message Statistics {
    string key = 1;
    string value =2;
  }

  message Data{
    repeated Statistics statistics = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateCluesRequest {
  string companyName = 1 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string industryId = 2 [(validate.rules).string = {min_len: 0}];
  string contactInformation = 3 [(validate.rules).string = {min_len: 1}];
  uint32 companyType = 4 [(validate.rules).uint32 = {in: [1, 2, 3]}];
  uint32 qianchuanUse = 5 [(validate.rules).uint32 = {in: [0, 1, 2, 3, 4, 5]}];
  string seller = 6 [(validate.rules).string = {min_len: 0, max_len: 20}];
  string facilitator = 7 [(validate.rules).string = {min_len: 0, max_len: 20}];
  string address = 8 [(validate.rules).string = {min_len: 0, max_len: 250}];
  uint64 areaCode = 9 [(validate.rules).uint64.gte = 0];
  string token = 10 [(validate.rules).string ={len: 32}];
}

message CreateCluesReply {
  message OperationLog {
    string userName = 1;
    string content = 2;
    string createTime = 3;
  }

  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 companyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    string source = 11;
    string status = 12;
    repeated OperationLog operationLogs = 13;
    string address = 14;
    string areaName = 15;
    uint64 areaCode = 16;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateCluesRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string companyName = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string industryId = 3 [(validate.rules).string = {min_len: 0}];
  string contactInformation = 4 [(validate.rules).string = {min_len: 1}];
  uint32 companyType = 5 [(validate.rules).uint32 = {in: [1, 2, 3]}];
  uint32 qianchuanUse = 6 [(validate.rules).uint32 = {in: [0, 1, 2, 3, 4, 5]}];
  string seller = 7 [(validate.rules).string = {min_len: 0, max_len: 20}];
  string facilitator = 8 [(validate.rules).string = {min_len: 0, max_len: 20}];
  string address = 9 [(validate.rules).string = {min_len: 0, max_len: 250}];
  uint64 areaCode = 10 [(validate.rules).uint64.gte = 0];
}

message UpdateCluesReply {
  message OperationLog {
    string userName = 1;
    string content = 2;
    string createTime = 3;
  }

  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 companyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    string source = 11;
    string status = 12;
    repeated OperationLog operationLogs = 13;
    string address = 14;
    string areaName = 15;
    uint64 areaCode = 16;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateOperationLogCluesRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string content = 2 [(validate.rules).string = {min_len: 1}];
  string operationTime = 3 [(validate.rules).string.pattern = "^((([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}|[1-9][0-9]{3})-(((0[13578]|1[02])-(0[1-9]|[12][0-9]|3[01]))|((0[469]|11)-(0[1-9]|[12][0-9]|30))|(02-(0[1-9]|[1][0-9]|2[0-8]))))|((([0-9]{2})(0[48]|[2468][048]|[13579][26])|((0[48]|[2468][048]|[3579][26])00))-02-29))([ ])([0-1]?[0-9]|2[0-3]):([0-5][0-9])$"];
}

message UpdateOperationLogCluesReply {
  message OperationLog {
    string userName = 1;
    string content = 2;
    string createTime = 3;
  }

  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 companyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    string source = 11;
    string status = 12;
    repeated OperationLog operationLogs = 13;
    string address = 14;
    string areaName = 15;
    uint64 areaCode = 16;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteCluesRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteCluesReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListCompanysRequest {
  uint64 pageNum = 1 [(validate.rules).uint64.gt = 0];
  string keyword = 2 [(validate.rules).string = {min_len: 0}];
  uint64 industryId = 3 [(validate.rules).uint64.gte = 0];
  string status = 4 [(validate.rules).string = {in: ["", "0", "1", "2"]}];
  uint32 companyType = 5 [(validate.rules).uint32 = {in: [0, 1, 2, 3, 4, 5]}];
}

message ListCompanysReply {
  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Companys{
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 clueCompanyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    uint32 companyType = 11;
    string companyTypeName = 12;
    uint32 status = 13;
    string startTime = 14;
    string endTime = 15;
    string adminName = 16;
    string adminPhone = 17;
    uint64 clueId = 18;
    string menuId = 19;
    uint32 accounts = 20;
    uint32 qianchuanAdvertisers = 21;
    string miniQrCodeUrl = 22;
    uint32 isTermwork = 23;
    string address = 24;
    string areaName = 25;
    uint64 areaCode = 26;
  }

  message Data {
    uint64 pageNum = 1;
    uint64 pageSize = 2;
    uint64 total = 3;
    uint64 totalPage = 4;
    repeated Companys list = 5;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListSelectCompanysReply {
  message Status {
    string key = 1;
    string value = 2;
  }

  message CompanyType {
    string key = 1;
    string value = 2;
  }

  message Data{
    repeated Status status = 1;
    repeated CompanyType companyType = 2;
  }

  uint32 code = 1;
  Data data = 2;
}

message StatisticsCompanysReply {
  message Statistics {
    string key = 1;
    string value =2;
  }

  message Data{
    repeated Statistics statistics = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateCompanysRequest {
  string companyName = 1 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string industryId = 2 [(validate.rules).string = {min_len: 0}];
  string contactInformation = 3 [(validate.rules).string = {min_len: 1}];
  uint32 companyType = 4 [(validate.rules).uint32 = {in: [1, 2, 3]}];
  uint32 qianchuanUse = 5 [(validate.rules).uint32 = {in: [0, 1, 2, 3, 4, 5]}];
  string seller = 6 [(validate.rules).string = {min_len: 0, max_len: 20}];
  string facilitator = 7 [(validate.rules).string = {min_len: 0, max_len: 20}];
  uint64 clueId = 8 [(validate.rules).uint64.gte = 0];
  string adminName = 9 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string adminPhone = 10 [(validate.rules).string.pattern = "^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$"];
  string address = 11 [(validate.rules).string = {min_len: 0, max_len: 250}];
  uint64 areaCode = 12 [(validate.rules).uint64.gte = 0];
  string token = 13 [(validate.rules).string ={len: 32}];
}

message CreateCompanysReply {
  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 clueCompanyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    uint32 companyType = 11;
    string companyTypeName = 12;
    uint32 status = 13;
    string startTime = 14;
    string endTime = 15;
    string adminName = 16;
    string adminPhone = 17;
    uint64 clueId = 18;
    string menuId = 19;
    uint32 accounts = 20;
    uint32 qianchuanAdvertisers = 21;
    string miniQrCodeUrl = 22;
    uint32 isTermwork = 23;
    string address = 24;
    string areaName = 25;
    uint64 areaCode = 26;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateCompanysRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string companyName = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string industryId = 3 [(validate.rules).string = {min_len: 0}];
  string contactInformation = 4 [(validate.rules).string = {min_len: 1}];
  uint32 companyType = 5 [(validate.rules).uint32 = {in: [1, 2, 3]}];
  uint32 qianchuanUse = 6 [(validate.rules).uint32 = {in: [0, 1, 2, 3, 4, 5]}];
  string seller = 7 [(validate.rules).string = {min_len: 0, max_len: 20}];
  string facilitator = 8 [(validate.rules).string = {min_len: 0, max_len: 20}];
  uint64 clueId = 9 [(validate.rules).uint64.gt = 0];
  string adminName = 10 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string adminPhone = 11 [(validate.rules).string.pattern = "^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$"];
  string address = 12 [(validate.rules).string = {min_len: 0, max_len: 250}];
  uint64 areaCode = 13 [(validate.rules).uint64.gte = 0];
}

message UpdateCompanysReply {
  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 clueCompanyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    uint32 companyType = 11;
    string companyTypeName = 12;
    uint32 status = 13;
    string startTime = 14;
    string endTime = 15;
    string adminName = 16;
    string adminPhone = 17;
    uint64 clueId = 18;
    string menuId = 19;
    uint32 accounts = 20;
    uint32 qianchuanAdvertisers = 21;
    string miniQrCodeUrl = 22;
    uint32 isTermwork = 23;
    string address = 24;
    string areaName = 25;
    uint64 areaCode = 26;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusCompanysRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 status = 2 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusCompanysReply {
  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 clueCompanyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    uint32 companyType = 11;
    string companyTypeName = 12;
    uint32 status = 13;
    string startTime = 14;
    string endTime = 15;
    string adminName = 16;
    string adminPhone = 17;
    uint64 clueId = 18;
    string menuId = 19;
    uint32 accounts = 20;
    uint32 qianchuanAdvertisers = 21;
    string miniQrCodeUrl = 22;
    uint32 isTermwork = 23;
    string address = 24;
    string areaName = 25;
    uint64 areaCode = 26;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateRoleCompanysRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint32 companyType = 2 [(validate.rules).uint32 = {in: [1, 2, 3, 4, 5]}];
  string menuIds = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  uint32 accounts = 4 [(validate.rules).uint32 = {gte: 0}];
  uint32 qianchuanAdvertisers = 5 [(validate.rules).uint32 = {gte: 0}];
  uint32 isTermwork = 6 [(validate.rules).uint32 = {in: [0, 1]}];
  string startTime = 7 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string endTime = 8 [(validate.rules).string = {min_len: 1, max_len: 50}];
}

message UpdateRoleCompanysReply {
  message ContactInformation {
    string contactUsername = 1;
    string contactPosition = 2;
    string contactPhone = 3;
    string contactWeixin = 4;
  }

  message Data {
    uint64 id = 1;
    string companyName = 2;
    string industryId = 3;
    string industryName = 4;
    repeated ContactInformation contactInformations = 5;
    uint32 clueCompanyType = 6;
    uint32 qianchuanUse = 7;
    uint64 sale = 8;
    string seller = 9;
    string facilitator = 10;
    uint32 companyType = 11;
    string companyTypeName = 12;
    uint32 status = 13;
    string startTime = 14;
    string endTime = 15;
    string adminName = 16;
    string adminPhone = 17;
    uint64 clueId = 18;
    string menuId = 19;
    uint32 accounts = 20;
    uint32 qianchuanAdvertisers = 21;
    string miniQrCodeUrl = 22;
    uint32 isTermwork = 23;
    string address = 24;
    string areaName = 25;
    uint64 areaCode = 26;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteCompanysRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
}

message DeleteCompanysReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListCompanyUsersRequest {
  uint64 companyId = 1 [(validate.rules).uint64.gt = 0];
  uint64 pageNum = 2 [(validate.rules).uint64.gt = 0];
  string keyword = 3 [(validate.rules).string = {min_len: 0}];
}

message ListCompanyUsersReply {
  message CompanyUsers {
    uint64 id = 1;
    uint64 companyId = 2;
    string username = 3;
    string job = 4;
    string phone = 5;
    uint32 role = 6;
    uint32 status = 7;
    uint32 isWhite = 8;
  }

  message Data {
    uint64 pageNum = 1;
    uint64 pageSize = 2;
    uint64 total = 3;
    uint64 totalPage = 4;
    repeated CompanyUsers list = 5;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListSelectCompanyUsersReply {
  message Role {
    string key = 1;
    string value = 2;
  }

  message Data{
    repeated Role role = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateCompanyUsersRequest {
  uint64 companyId = 1 [(validate.rules).uint64.gt = 0];
  string username = 2 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string job = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string phone = 4 [(validate.rules).string.pattern = "^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$"];
  uint32 role = 5 [(validate.rules).uint32 = {in: [1, 2, 3]}];
  string token = 6 [(validate.rules).string ={len: 32}];
}

message CreateCompanyUsersReply {
  message Data {
    uint64 id = 1;
    uint64 companyId = 2;
    string username = 3;
    string job = 4;
    string phone = 5;
    uint32 role = 6;
    uint32 status = 7;
    uint32 isWhite = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateCompanyUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint64 companyId = 2 [(validate.rules).uint64.gt = 0];
  string username = 3 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string job = 4 [(validate.rules).string = {min_len: 1, max_len: 50}];
  string phone = 5 [(validate.rules).string.pattern = "^((\\+|00)86)?(1[3-9]|9[28])\\d{9}$"];
  uint32 role = 6 [(validate.rules).uint32 = {in: [1, 2, 3]}];
}

message UpdateCompanyUsersReply {
  message Data {
    uint64 id = 1;
    uint64 companyId = 2;
    string username = 3;
    string job = 4;
    string phone = 5;
    uint32 role = 6;
    uint32 status = 7;
    uint32 isWhite = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateStatusCompanyUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint64 companyId = 2 [(validate.rules).uint64.gt = 0];
  uint32 status = 3 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateStatusCompanyUsersReply {
  message Data {
    uint64 id = 1;
    uint64 companyId = 2;
    string username = 3;
    string job = 4;
    string phone = 5;
    uint32 role = 6;
    uint32 status = 7;
    uint32 isWhite = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateRoleCompanyUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint64 companyId = 2 [(validate.rules).uint64.gt = 0];
  string roleIds = 3 [(validate.rules).string = {min_len: 0}];
}

message UpdateRoleCompanyUsersReply {
  message Data {
    uint64 id = 1;
    uint64 companyId = 2;
    string username = 3;
    string job = 4;
    string phone = 5;
    uint32 role = 6;
    uint32 status = 7;
    uint32 isWhite = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateWhiteCompanyUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint64 companyId = 2 [(validate.rules).uint64.gt = 0];
  uint32 isWhite = 3 [(validate.rules).uint32 = {in: [0, 1]}];
}

message UpdateWhiteCompanyUsersReply {
  message Data {
    uint64 id = 1;
    uint64 companyId = 2;
    string username = 3;
    string job = 4;
    string phone = 5;
    uint32 role = 6;
    uint32 status = 7;
    uint32 isWhite = 8;
  }

  uint32 code = 1;
  Data data = 2;
}

message DeleteCompanyUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint64 companyId = 2 [(validate.rules).uint64.gt = 0];
}

message DeleteCompanyUsersReply {
  message Data {
  }

  uint32 code = 1;
  Data data = 2;
}

message ListQianchuanAdvertisersCompanyUsersRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  uint64 companyId = 2 [(validate.rules).uint64.gt = 0];
}

message ListQianchuanAdvertisersCompanyUsersReply {
  message Advertisers{
    uint64 advertiserId = 1;
    string advertiserName = 2;
    string companyName = 3;
    uint32 status = 4;
    uint32 isSelect = 5;
  }

  message Data {
    repeated Advertisers list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListIndustriesReply {
  message Industries{
    uint64 id = 1;
    string industryName = 2;
  }

  message Data {
    repeated Industries list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListAreasRequest {
  uint64 parentAreaCode = 1 [(validate.rules).uint64.gte = 0];
}

message ListAreasReply {
  message Areas {
    uint64 areaCode = 1;
    uint64 parentAreaCode = 2;
    string areaName = 3;
  }

  message Data {
    repeated Areas list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message ListUpdateLogsReply {
  message UpdateLogs {
    uint64 id = 1;
    string name = 2;
    string content = 3;
    string createTime = 4;
  }

  message Data {
    repeated UpdateLogs list = 1;
  }

  uint32 code = 1;
  Data data = 2;
}

message CreateUpdateLogsRequest {
  string name = 1 [(validate.rules).string ={min_len: 1, max_len: 250}];
  string content = 2 [(validate.rules).string ={min_len: 1}];
  string token = 3 [(validate.rules).string ={len: 32}];
}

message CreateUpdateLogsReply {
  message Data {
    uint64 id = 1;
    string name = 2;
    string content = 3;
    string createTime = 4;
  }

  uint32 code = 1;
  Data data = 2;
}

message UpdateUpdateLogsRequest {
  uint64 id = 1 [(validate.rules).uint64.gt = 0];
  string name = 2 [(validate.rules).string ={min_len: 1, max_len: 250}];
  string content = 3 [(validate.rules).string ={min_len: 1}];
}

message UpdateUpdateLogsReply {
  message Data {
    uint64 id = 1;
    string name = 2;
    string content = 3;
    string createTime = 4;
  }

  uint32 code = 1;
  Data data = 2;
}
